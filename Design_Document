{
  "_id": "_design/Tweet",
  "_rev": "137-5fbca459065dd130e546bd1bd6500225",
  "views": {
    "stateSuburbSentiment": {
      "reduce": "_sum",
      "map": "function (doc) {\n  if(doc.type==\"Tweet\"){\n     emit([doc.stateTag,doc.geoTag.city,doc.sentimentTag], 1); \n  }\n}"
    },
    "sentStateSuburb": {
      "reduce": "_count",
      "map": "function (doc) {\n  if(doc.type==\"Tweet\")\n  {\n   emit([doc.stateTag,doc.geoTag.city,doc.sentimentTag], 1); \n  }\n}"
    },
    "suburbSalary": {
      "reduce": "_count",
      "map": "function (doc) {\n  if(doc.type==\"Suburb\")\n  {\n   emit([doc.suburbName,doc.medianIncome], 1); \n  }\n}"
    },
    "salarySuburb": {
      "map": "function (doc) {\n  if(doc.type==\"Suburb\")\n  {\n   emit([doc.state,doc.medianIncome],1); \n  }\n}"
    },
    "StateSuburbTweetCount": {
      "reduce": "_count",
      "map": "function (doc) {\n  if(doc.type==\"Tweet\"){\n     emit([doc.geoTag.city, doc.stateTag], 1); \n  }\n}"
    },
    "Tweets": {
      "reduce": "_count",
      "map": "function (doc) {\n  if(doc.type==\"Tweet\")\n  {\n     emit([doc.stateTag,doc.geoTag.city],[doc.sentimentTag,1]); \n  }\n}"
    },
    "suburbDetails": {
      "map": "function (doc) {\n  if(doc.type==\"Suburb\"){\n    emit([doc.state,doc.suburbName],[doc.medianIncome,doc.yearTwelvePassPercent,doc.uniStudentPercent])\n  }\n}"
    },
    "SentimentTweetStateSuburb": {
      "reduce": "function(keys, values,rereduce) {\r\n  analysis={'tweets':0, 'happy':0, 'sad':0, 'neutral':0, 'empty':0, 'enthusiasm':0, 'worry':0, 'surprise':0,'love':0, 'fun':0, 'hate':0, 'boredom':0, 'relief':0, 'anger':0, 'happyPercent':0, 'sadPercent':0, 'neutralPercent':0, 'emptyPercent':0, 'enthusiasmPercent':0, 'worryPercent':0, 'surprisePercent':0, 'lovePercent':0, 'funPercent':0, 'hatePercent':0, 'boredomPercent':0, 'reliefPercent':0, 'angerPercent':0};\r\n  //finalresult={'tweets':10, 'happyPercent':0, 'sadPercent':0, 'neutralPercent':0};\r\n if(rereduce==false){\r\n  analysis.tweets=0;analysis.happy=0;analysis.sad=0;analysis.neutral=0;\r\n  analysis.empty=0; analysis.enthusiasm=0; analysis.worry=0; analysis.surprise=0;\r\n  analysis.love=0; analysis.fun=0; analysis.hate=0; analysis.boredom=0;\r\n  analysis.relief=0; analysis.anger=0;\r\n  for(var idx in values) {\r\n    analysis.tweets+=1;\r\n    var sentiment=values[idx];\r\n    if(sentiment==\"Happy\")\r\n      analysis.happy+=1;\r\n    else if (sentiment == \"Sad\")\r\n      analysis.sad+=1;\r\n    else if (sentiment == \"Neutral\")\r\n      analysis.neutral+=1;\r\n    else if (sentiment == \"Empty\")\r\n      analysis.empty+=1;\r\n    else if (sentiment == \"Enthusiasm\")\r\n      analysis.enthusiasm+=1;  \r\n    else if (sentiment == \"Worry\")\r\n      analysis.worry+=1;\r\n    else if (sentiment == \"Surprise\")\r\n      analysis.surprise+=1;\r\n    else if (sentiment == \"Love\")\r\n      analysis.love+=1;\r\n    else if (sentiment == \"Fun\")\r\n      analysis.fun+=1;      \r\n    else if (sentiment == \"Hate\")\r\n      analysis.hate+=1;  \r\n    else if (sentiment == \"Boredom\")\r\n      analysis.boredom+=1;\r\n    else if (sentiment == \"Relief\")\r\n      analysis.relief+=1;\r\n    else if (sentiment == \"Anger\")\r\n      analysis.anger+=1;\r\n  }\r\n }\r\n else{\r\n // analysis.tweets=values.tweets;analysis.happy=values.happy;analysis.sad=values.sad;analysis.neutral=values.neutral;\r\n\r\n  for(var idx in values) {\r\n      analysis.tweets+=values[idx].tweets;\r\n      analysis.happy+=values[idx].happy;\r\n      analysis.sad+=values[idx].sad;\r\n      analysis.neutral+=values[idx].neutral;\r\n      analysis.empty+=values[idx].empty;\r\n      analysis.enthusiasm+=values[idx].enthusiasm;\r\n      analysis.worry+=values[idx].worry;\r\n      analysis.surprise+=values[idx].surprise;\r\n      analysis.love+=values[idx].love;\r\n      analysis.fun+=values[idx].fun;\r\n      analysis.hate+=values[idx].hate;\r\n      analysis.boredom+=values[idx].boredom;\r\n      analysis.relief+=values[idx].relief;\r\n      analysis.anger+=values[idx].anger;\r\n  }\r\n }\r\n \r\n analysis.happyPercent=(analysis.happy/analysis.tweets)*100; \r\n analysis.sadPercent=(analysis.sad/analysis.tweets)*100; \r\n analysis.neutralPercent=(analysis.neutral/analysis.tweets)*100; \r\n analysis.emptyPercent=(analysis.empty/analysis.tweets)*100; \r\n analysis.enthusiasmPercent=(analysis.enthusiasm/analysis.tweets)*100; \r\n analysis.worryPercent=(analysis.worry/analysis.tweets)*100; \r\n analysis.surprisePercent=(analysis.surprise/analysis.tweets)*100; \r\n analysis.lovePercent=(analysis.love/analysis.tweets)*100; \r\n analysis.funPercent=(analysis.fun/analysis.tweets)*100; \r\n analysis.hatePercent=(analysis.hate/analysis.tweets)*100; \r\n analysis.boredomPercent=(analysis.boredom/analysis.tweets)*100; \r\n analysis.reliefPercent=(analysis.relief/analysis.tweets)*100; \r\n analysis.angerPercent=(analysis.anger/analysis.tweets)*100;\r\n\r\n  return analysis; \r\n}",
      "map": "function (doc) {\n  if(doc.type==\"Tweet\"){\n        emit([doc.stateTag,doc.geoTag.city], doc.sentimentTag);\n  }\n}"
    },
    "HashTag": {
      "reduce": "function(keys, counts) {\r\n  var sum = 0;\r\n  for(var i=0; i < counts.length; i++) {\r\n     sum += counts[i];\r\n  }\r\n  return sum;\r\n}",
      "map": "\r\n\r\nfunction(doc) {\r\n    for(i in doc.entities.hashtags){\r\n      if(doc.entities.hashtags[i]){\r\n \tstr = JSON.stringify(doc.entities.hashtags[i].text);\r\n \tif(str){\r\n\tstr = str.split(\"\\\"\");\r\n      emit([str[1],doc.stateTag,doc.geoTag.city], 1);\r\n\t\r\n \t}\r\n \t}\r\n    }\r\n}"
    },
    "literacyRateSuburb": {
      "map": "function (doc) {\n  if(doc.type==\"Suburb\")\n  {\n   emit([doc.state,doc.yearTwelvePassPercent],1); \n  }\n}"
    },
    "UniStudentSuburb": {
      "map": "function (doc) {\n  if(doc.type==\"Suburb\")\n  {\n   emit([doc.state,doc.uniStudentPercent],1); \n  }\n}"
    },
    "EmployedSuburb": {
      "map": "function (doc) {\nif(doc.type==\"Suburb\")\n{\n  emit([doc.state, doc.percentEmployed],1)\n}\n}"
    },
    "NOT-REQUIRED": {
      "reduce": "function(keys, values,rereduce) {\r\n  analysis={'tweets':0, 'happy':0, 'sad':0, 'neutral':0, 'happyPercent':0, 'sadPercent':0, 'neutralPercent':0};\r\n  //finalresult={'tweets':10, 'happyPercent':0, 'sadPercent':0, 'neutralPercent':0};\r\n if(rereduce==false){\r\n  analysis.tweets=0;analysis.happy=0;analysis.sad=0;analysis.neutral=0;\r\n  for(var idx in values) {\r\n    analysis.tweets+=1;\r\n    var sentiment=values[idx];\r\n    if(sentiment==\"Happy\")\r\n      analysis.happy+=1;\r\n    else if (sentiment == \"Sad\")\r\n      analysis.sad+=1;\r\n    else if (sentiment == \"Neutral\")\r\n      analysis.neutral+=1;\r\n  }\r\n }\r\n else{\r\n // analysis.tweets=values.tweets;analysis.happy=values.happy;analysis.sad=values.sad;analysis.neutral=values.neutral;\r\n\r\n  for(var idx in values) {\r\n      analysis.tweets+=values[idx].tweets;\r\n      analysis.happy+=values[idx].happy;\r\n      analysis.sad+=values[idx].sad;\r\n      analysis.neutral+=values[idx].neutral;\r\n  }\r\n }\r\n \r\n  analysis.happyPercent=(analysis.happy/analysis.tweets)*100; \r\n analysis.sadPercent=(analysis.sad/analysis.tweets)*100; \r\n analysis.neutralPercent=(analysis.neutral/analysis.tweets)*100; \r\n \r\n if(analysis.tweets<10){\r\n   analysis.happyPercent=0;\r\n   analysis.sadPercent=0;\r\n   analysis.neutralPercent=0;\r\n }\r\n \r\n  return analysis; \r\n}",
      "map": "function (doc) {\n  if(doc.type==\"Tweet\"){\n        emit([doc.stateTag,doc.geoTag.city,doc.sentimentTag], doc.sentimentTag);\n  }\n}"
    },
    "StateSuburb": {
      "map": "function (doc) {\n  if(doc.type==\"Suburb\"){\n       emit(doc.state,doc.suburbName)\n  }\n}"
    }
  },
  "lists": {
    "sort": "function(head,req) {var row;  var rows=[]; while(row = getRow()) {    rows.push(row)    }  rows.sort(function(a, b)   {   return a.value - b.value; });  if(req.query.sorttype!=\"ascending\")rows.reverse(); send(JSON.stringify({\"rows\" : rows}))  }",
    "sortByAttribute": "function(head,req) {var row;  var rows=[]; var mini=req.query.min; var state= req.query.state; while(row = getRow()) {if(row.value.tweets>mini && row.key[0]==state)   rows.push(row)    };  rows.sort(function(a, b)   { if(req.query.sentiment==\"happy\")   return a.value.happyPercent - b.value.happyPercent; else if(req.query.sentiment==\"sad\")   return a.value.sadPercent - b.value.sadPercent; else if(req.query.sentiment==\"neutral\")   return a.value.neutralPercent - b.value.neutralPercent;  else if(req.query.sentiment==\"empty\")   return a.value.emptyPercent - b.value.emptyPercent; else if(req.query.sentiment==\"enthusiasm\")   return a.value.enthusiasmPercent - b.value.enthusiasmPercent;  else if(req.query.sentiment==\"worry\")   return a.value.worryPercent - b.value.worryPercent; else if(req.query.sentiment==\"surprise\")   return a.value.surprisePercent - b.value.surprisePercent; else if(req.query.sentiment==\"love\")   return a.value.lovePercent - b.value.lovePercent; else if(req.query.sentiment==\"fun\")   return a.value.funPercent - b.value.funPercent; else if(req.query.sentiment==\"hate\")   return a.value.hatePercent - b.value.hatePercent; else if(req.query.sentiment==\"boredom\")   return a.value.boredomPercent - b.value.boredomPercent; else if(req.query.sentiment==\"relief\")   return a.value.reliefPercent - b.value.reliefPercent; }); if(req.query.sorttype!=\"ascending\")rows.reverse(); send(JSON.stringify({\"rows\" : rows.slice(0,10)}))  }"
  },
  "language": "javascript"
}
